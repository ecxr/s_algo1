require 'rspec'
require 'inversion_counter'

# Requires implementation of InversionCounter class with a single
# instance method: #count_inversions(array).
#
# #count_inversions(array) should return an object with the following
# attributes:
#   #elements: an array containing the elements from the provided
#              array in sorted order
#   #inversions: the number of inversions counted in the provided array
#
# 
describe InversionCounter do
  describe "#count_inversions" do    
    let(:counter) { InversionCounter.new }
    subject(:result) { counter.count_inversions(input) }

    # base case
    context "with Base Case" do
      let(:input) { [500] }
      
      its(:elements) { should eq([500]) }
      its(:inversions) { should eq(0) }
    end
    
    # 8-element array with 8 inversions
    context "with [1, 8, 3, 4, 0, 42, 84, 23]" do
      let(:input) { [1, 8, 3, 4, 0, 42, 84, 23] }
      
      its(:elements) { should eq([0, 1, 3, 4, 8, 23, 42, 84]) }
      its(:inversions) { should eq(8) }
    end

    # 10-element array with 20 inversions
    context "with [9, 1, 2, 7, 4, 3, 10, 11, 0, 5]" do
      let(:input) { [9, 1, 2, 7, 4, 3, 10, 11, 0, 5] }
      
      its(:elements) { should eq([0, 1, 2, 3, 4, 5, 7, 9, 10, 11]) }
      its(:inversions) { should eq(20) }
    end
    
    # 9-element array with 21 inversions
    context "with [32, 77, 49, 10, 74, 2, 48, 101, 1]" do
      let(:input) { [32, 77, 49, 10, 74, 2, 48, 101, 1] }
      
      its(:elements) { should eq([1, 2, 10, 32, 48, 49, 74, 77, 101]) }
      its(:inversions) { should eq(21) }
    end
        
    # 5-element sorted array
    context "with [500, 501, 502, 503, 504]" do
      let(:input) { [500, 501, 502, 503, 504] }

      its(:elements) { should eq([500, 501, 502, 503, 504]) }
      its(:inversions) { should eq(0) }
    end

    # 10-element reverse-sorted array
    context "with [509, 508, 507, 506, 505, 504, 503, 502, 501, 500]" do
      let(:input) { [509, 508, 507, 506, 505, 504, 503, 502, 501, 500] }

      its(:elements) { should eq([500, 501, 502, 503, 504, 505, 506, 507, 508, 509]) }
      its(:inversions) { should eq(45) }
    end
  end
end